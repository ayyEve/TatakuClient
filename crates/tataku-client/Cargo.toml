[package]
name = "tataku-client"
version = "0.5.0"
authors.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
#  TODO: we should always assume gameplay and graphics here lol
[features]
default = [ "gameplay" ]
bass_audio = [ "tataku-bass" ]
as_crate = []
gameplay = [ "graphics", "bass_audio", "discord", "gilrs", "media_control", "tokio-tungstenite", "ipc-channel" ]
discord = [ "discord-rich-presence" ]
media_control = [ "souvlaki" ]
ui = [ "iced", "triple_buffer" ]

# # removes as much graphics-side stuff as possible
graphics = [ "winit", "ui", "image" ]
dynamic_gamemodes = [ "tataku-game/dynamic_gamemodes" ]

[dependencies]
tataku-common.workspace = true
tataku-client-proc-macros.workspace = true

tataku-game.workspace = true
tataku-wgpu.workspace = true
tataku-bass = { workspace = true, optional = true }

gamemode-osu.workspace = true
gamemode-taiko.workspace = true
gamemode-mania.workspace = true
gamemode-utyping.workspace = true


# framework stuff
lazy_static =  { workspace = true }
parking_lot = { workspace = true }
tokio = { workspace = true, features = ["full"] }
rusqlite = { workspace = true, features = ["bundled"] }
futures-util = { workspace = true, features = ["async-await", "sink", "std"] }
async-trait = { workspace = true }
triple_buffer = { workspace = true, optional = true }
crossbeam = { workspace = true }
global_value_manager = { workspace = true }
ipc-channel = { workspace = true, optional = true }

# image stuff
image = { workspace = true, optional = true }

# windowing
winit = { workspace = true, features = ["serde"], optional = true }

# gamepad input
gilrs = { workspace = true, features = ["serde-serialize"], optional = true }
# media controls
souvlaki = { workspace = true, default-features = false, features = ["use_zbus"], optional = true }

# gui
iced = { workspace = true, features = ["canvas", "tokio", "debug", "image", "advanced", "lazy", "wgpu"], default-features = false, optional = true }

# networking
sha2 = { workspace = true }
tokio-tungstenite = { workspace = true, features = ["rustls-tls-native-roots"], optional = true }
reqwest = { workspace = true, features = ["json"] }
discord-rich-presence = { workspace = true, optional = true }

# serde
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_yaml = { workspace = true }

# decoding/encoding/zip stuff
encoding_rs = { workspace = true }

native-tls = { workspace = true }
tokio-native-tls = { workspace = true }

# other stuff
rand = { workspace = true }
chrono = { workspace = true }


# logging
# tataku-logging = { workspace = true }
# log = { workspace = true } # todo: nuke before commit
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-appender.workspace = true
num-format = { workspace = true }
strfmt = { workspace = true }

# battery_level = { git = "https://gitlab.ayyeve.dev/ayyEve/battery-level-rs" }